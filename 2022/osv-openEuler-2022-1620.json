{
    "schema_version": "1.6.0",
    "id": "OESA-2022-1620",
    "modified": "2022-04-29T00:00:00Z",
    "published": "2022-04-29T00:00:00Z",
    "withdrawn": "",
    "aliases": null,
    "related": [
        "CVE-2020-15366",
        "CVE-2021-3450",
        "CVE-2021-44532",
        "CVE-2021-44533",
        "CVE-2021-44531",
        "CVE-2022-21824",
        "CVE-2021-27290",
        "CVE-2021-22921",
        "CVE-2021-39134",
        "CVE-2021-39135",
        "CVE-2021-22959",
        "CVE-2021-22960"
    ],
    "summary": "nodejs security update",
    "details": "Node.js is a platform built on Chrome\u0026apos;s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.\r\n\r\n\r\n\r\nSecurity Fix(es):\r\n\r\nAn issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)(CVE-2020-15366)\r\n\r\nThe X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \u0026quot;purpose\u0026quot; has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \u0026quot;purpose\u0026quot; values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).(CVE-2021-3450)\r\n\r\nNode.js \u0026lt; 12.22.9, \u0026lt; 14.18.3, \u0026lt; 16.13.2, and \u0026lt; 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.(CVE-2021-44532)\r\n\r\nNode.js \u0026lt; 12.22.9, \u0026lt; 14.18.3, \u0026lt; 16.13.2, and \u0026lt; 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node\u0026apos;s ambiguous presentation of certificate subjects may be vulnerable.(CVE-2021-44533)\r\n\r\nAccepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js \u0026lt; 12.22.9, \u0026lt; 14.18.3, \u0026lt; 16.13.2, and \u0026lt; 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.(CVE-2021-44531)\r\n\r\nDue to the formatting logic of the \u0026quot;console.table()\u0026quot; function it was not safe to allow user controlled input to be passed to the \u0026quot;properties\u0026quot; parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be \u0026quot;__proto__\u0026quot;. The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js \u0026gt;= 12.22.9, \u0026gt;= 14.18.3, \u0026gt;= 16.13.2, and \u0026gt;= 17.3.1 use a null protoype for the object these properties are being assigned to.(CVE-2022-21824)\r\n\r\nssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.(CVE-2021-27290)\r\n\r\nNode.js before 16.4.1, 14.17.2, and 12.22.2 is vulnerable to local privilege escalation attacks under certain conditions on Windows platforms. More specifically, improper configuration of permissions in the installation directory allows an attacker to perform two different escalation attacks: PATH and DLL hijacking.(CVE-2021-22921)\r\n\r\n`@npmcli/arborist`, the library that calculates dependency trees and manages the `node_modules` folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is, in part, accomplished by resolving dependency specifiers defined in `package.json` manifests for dependencies with a specific name, and nesting folders to resolve conflicting dependencies. When multiple dependencies differ only in the case of their name, Arborist\u0026apos;s internal data structure saw them as separate items that could coexist within the same level in the `node_modules` hierarchy. However, on case-insensitive file systems (such as macOS and Windows), this is not the case. Combined with a symlink dependency such as `file:/some/path`, this allowed an attacker to create a situation in which arbitrary contents could be written to any location on the filesystem. For example, a package `pwn-a` could define a dependency in their `package.json` file such as `\u0026quot;foo\u0026quot;: \u0026quot;file:/some/path\u0026quot;`. Another package, `pwn-b` could define a dependency such as `FOO: \u0026quot;file:foo.tgz\u0026quot;`. On case-insensitive file systems, if `pwn-a` was installed, and then `pwn-b` was installed afterwards, the contents of `foo.tgz` would be written to `/some/path`, and any existing contents of `/some/path` would be removed. Anyone using npm v7.20.6 or earlier on a case-insensitive filesystem is potentially affected. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above.(CVE-2021-39134)\r\n\r\n`@npmcli/arborist`, the library that calculates dependency trees and manages the node_modules folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is accomplished by extracting package contents into a project\u0026apos;s `node_modules` folder. If the `node_modules` folder of the root project or any of its dependencies is somehow replaced with a symbolic link, it could allow Arborist to write package dependencies to any arbitrary location on the file system. Note that symbolic links contained within package artifact contents are filtered out, so another means of creating a `node_modules` symbolic link would have to be employed. 1. A `preinstall` script could replace `node_modules` with a symlink. (This is prevented by using `--ignore-scripts`.) 2. An attacker could supply the target with a git repository, instructing them to run `npm install --ignore-scripts` in the root. This may be successful, because `npm install --ignore-scripts` is typically not capable of making changes outside of the project directory, so it may be deemed safe. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above. For more information including workarounds please see the referenced GHSA-gmw6-94gg-2rc2.(CVE-2021-39135)\r\n\r\nThe parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp \u0026lt; v2.1.4 and \u0026lt; v6.0.6.(CVE-2021-22959)\r\n\r\nThe parse function in llhttp \u0026lt; 2.1.4 and \u0026lt; 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.(CVE-2021-22960)",
    "severity": null,
    "affected": [
        {
            "package": {
                "ecosystem": "openEuler-20.03-LTS-SP1",
                "name": "nodejs",
                "purl": "pkg:rpm/nodejs@12.22.11-1.oe1"
            },
            "severity": null,
            "ranges": [
                {
                    "type": "ECOSYSTEM",
                    "repo": "",
                    "events": [
                        {
                            "introduced": "0",
                            "fixed": "12.22.11-1.oe1",
                            "last_affected": "",
                            "limit": ""
                        }
                    ],
                    "database_specific": null
                }
            ],
            "versions": null,
            "ecosystem_specific": {
                "aarch64": [
                    "npm-6.14.16-1.12.22.11.1.oe1.aarch64.rpm",
                    "nodejs-debugsource-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-full-i18n-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-libs-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-debuginfo-12.22.11-1.oe1.aarch64.rpm",
                    "v8-devel-7.8.279.23-1.12.22.11.1.oe1.aarch64.rpm",
                    "nodejs-devel-12.22.11-1.oe1.aarch64.rpm"
                ],
                "noarch": [
                    "nodejs-docs-12.22.11-1.oe1.noarch.rpm"
                ],
                "src": [
                    "nodejs-12.22.11-1.oe1.src.rpm"
                ],
                "x86_64": [
                    "nodejs-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-full-i18n-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-debuginfo-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-devel-12.22.11-1.oe1.x86_64.rpm",
                    "npm-6.14.16-1.12.22.11.1.oe1.x86_64.rpm",
                    "nodejs-libs-12.22.11-1.oe1.x86_64.rpm",
                    "v8-devel-7.8.279.23-1.12.22.11.1.oe1.x86_64.rpm",
                    "nodejs-debugsource-12.22.11-1.oe1.x86_64.rpm"
                ]
            },
            "database_specific": null
        },
        {
            "package": {
                "ecosystem": "openEuler-20.03-LTS-SP2",
                "name": "nodejs",
                "purl": "pkg:rpm/nodejs@12.22.11-1.oe1"
            },
            "severity": null,
            "ranges": [
                {
                    "type": "ECOSYSTEM",
                    "repo": "",
                    "events": [
                        {
                            "introduced": "0",
                            "fixed": "12.22.11-1.oe1",
                            "last_affected": "",
                            "limit": ""
                        }
                    ],
                    "database_specific": null
                }
            ],
            "versions": null,
            "ecosystem_specific": {
                "aarch64": [
                    "npm-6.14.16-1.12.22.11.1.oe1.aarch64.rpm",
                    "nodejs-debugsource-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-full-i18n-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-libs-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-debuginfo-12.22.11-1.oe1.aarch64.rpm",
                    "v8-devel-7.8.279.23-1.12.22.11.1.oe1.aarch64.rpm",
                    "nodejs-devel-12.22.11-1.oe1.aarch64.rpm"
                ],
                "noarch": [
                    "nodejs-docs-12.22.11-1.oe1.noarch.rpm"
                ],
                "src": [
                    "nodejs-12.22.11-1.oe1.src.rpm"
                ],
                "x86_64": [
                    "nodejs-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-full-i18n-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-debuginfo-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-devel-12.22.11-1.oe1.x86_64.rpm",
                    "npm-6.14.16-1.12.22.11.1.oe1.x86_64.rpm",
                    "nodejs-libs-12.22.11-1.oe1.x86_64.rpm",
                    "v8-devel-7.8.279.23-1.12.22.11.1.oe1.x86_64.rpm",
                    "nodejs-debugsource-12.22.11-1.oe1.x86_64.rpm"
                ]
            },
            "database_specific": null
        },
        {
            "package": {
                "ecosystem": "openEuler-20.03-LTS-SP3",
                "name": "nodejs",
                "purl": "pkg:rpm/nodejs@12.22.11-1.oe1"
            },
            "severity": null,
            "ranges": [
                {
                    "type": "ECOSYSTEM",
                    "repo": "",
                    "events": [
                        {
                            "introduced": "0",
                            "fixed": "12.22.11-1.oe1",
                            "last_affected": "",
                            "limit": ""
                        }
                    ],
                    "database_specific": null
                }
            ],
            "versions": null,
            "ecosystem_specific": {
                "aarch64": [
                    "npm-6.14.16-1.12.22.11.1.oe1.aarch64.rpm",
                    "nodejs-debugsource-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-full-i18n-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-libs-12.22.11-1.oe1.aarch64.rpm",
                    "nodejs-debuginfo-12.22.11-1.oe1.aarch64.rpm",
                    "v8-devel-7.8.279.23-1.12.22.11.1.oe1.aarch64.rpm",
                    "nodejs-devel-12.22.11-1.oe1.aarch64.rpm"
                ],
                "noarch": [
                    "nodejs-docs-12.22.11-1.oe1.noarch.rpm"
                ],
                "src": [
                    "nodejs-12.22.11-1.oe1.src.rpm"
                ],
                "x86_64": [
                    "nodejs-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-full-i18n-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-debuginfo-12.22.11-1.oe1.x86_64.rpm",
                    "nodejs-devel-12.22.11-1.oe1.x86_64.rpm",
                    "npm-6.14.16-1.12.22.11.1.oe1.x86_64.rpm",
                    "nodejs-libs-12.22.11-1.oe1.x86_64.rpm",
                    "v8-devel-7.8.279.23-1.12.22.11.1.oe1.x86_64.rpm",
                    "nodejs-debugsource-12.22.11-1.oe1.x86_64.rpm"
                ]
            },
            "database_specific": null
        }
    ],
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15366"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3450"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-44532"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-44533"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-44531"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21824"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27290"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-22921"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39134"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39135"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-22959"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-22960"
        }
    ],
    "credits": null,
    "database_specific": {
        "severity": "High"
    }
}